{"ast":null,"code":"var _jsxFileName = \"/workspace/src/contexts/RoomContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomContext = /*#__PURE__*/createContext();\nexport const useRoom = () => {\n  _s();\n  const context = useContext(RoomContext);\n  if (!context) {\n    throw new Error('useRoom must be used within a RoomProvider');\n  }\n  return context;\n};\n_s(useRoom, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const RoomProvider = ({\n  children\n}) => {\n  _s2();\n  const [rooms, setRooms] = useState([]);\n  const [currentRoom, setCurrentRoom] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // Load saved rooms from localStorage\n    const savedRooms = localStorage.getItem('roomtab_rooms');\n    if (savedRooms) {\n      setRooms(JSON.parse(savedRooms));\n    }\n  }, []);\n  useEffect(() => {\n    // Save rooms to localStorage whenever rooms change\n    localStorage.setItem('roomtab_rooms', JSON.stringify(rooms));\n  }, [rooms]);\n  const createRoom = roomData => {\n    const newRoom = {\n      id: Date.now().toString(),\n      ...roomData,\n      createdAt: new Date().toISOString(),\n      members: roomData.members || [],\n      expenses: roomData.expenses || []\n    };\n    setRooms(prev => [...prev, newRoom]);\n    return newRoom;\n  };\n  const joinRoom = (roomId, user) => {\n    setRooms(prev => prev.map(room => {\n      if (room.id === roomId) {\n        const isAlreadyMember = room.members.some(member => member.id === user.id);\n        if (!isAlreadyMember) {\n          return {\n            ...room,\n            members: [...room.members, user]\n          };\n        }\n      }\n      return room;\n    }));\n  };\n  const addExpense = (roomId, expense) => {\n    const newExpense = {\n      id: Date.now().toString(),\n      ...expense,\n      createdAt: new Date().toISOString()\n    };\n    setRooms(prev => prev.map(room => {\n      if (room.id === roomId) {\n        return {\n          ...room,\n          expenses: [...room.expenses, newExpense]\n        };\n      }\n      return room;\n    }));\n    if ((currentRoom === null || currentRoom === void 0 ? void 0 : currentRoom.id) === roomId) {\n      setCurrentRoom(prev => ({\n        ...prev,\n        expenses: [...prev.expenses, newExpense]\n      }));\n    }\n  };\n  const updateExpense = (roomId, expenseId, updates) => {\n    setRooms(prev => prev.map(room => {\n      if (room.id === roomId) {\n        return {\n          ...room,\n          expenses: room.expenses.map(expense => expense.id === expenseId ? {\n            ...expense,\n            ...updates\n          } : expense)\n        };\n      }\n      return room;\n    }));\n    if ((currentRoom === null || currentRoom === void 0 ? void 0 : currentRoom.id) === roomId) {\n      setCurrentRoom(prev => ({\n        ...prev,\n        expenses: prev.expenses.map(expense => expense.id === expenseId ? {\n          ...expense,\n          ...updates\n        } : expense)\n      }));\n    }\n  };\n  const deleteExpense = (roomId, expenseId) => {\n    setRooms(prev => prev.map(room => {\n      if (room.id === roomId) {\n        return {\n          ...room,\n          expenses: room.expenses.filter(expense => expense.id !== expenseId)\n        };\n      }\n      return room;\n    }));\n    if ((currentRoom === null || currentRoom === void 0 ? void 0 : currentRoom.id) === roomId) {\n      setCurrentRoom(prev => ({\n        ...prev,\n        expenses: prev.expenses.filter(expense => expense.id !== expenseId)\n      }));\n    }\n  };\n  const getRoomById = roomId => {\n    return rooms.find(room => room.id === roomId);\n  };\n  const value = {\n    rooms,\n    currentRoom,\n    setCurrentRoom,\n    loading,\n    setLoading,\n    createRoom,\n    joinRoom,\n    addExpense,\n    updateExpense,\n    deleteExpense,\n    getRoomById\n  };\n  return /*#__PURE__*/_jsxDEV(RoomContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s2(RoomProvider, \"EwCx4JAWY0/CTPuOXN41jqjor3g=\");\n_c = RoomProvider;\nvar _c;\n$RefreshReg$(_c, \"RoomProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","RoomContext","useRoom","_s","context","Error","RoomProvider","children","_s2","rooms","setRooms","currentRoom","setCurrentRoom","loading","setLoading","savedRooms","localStorage","getItem","JSON","parse","setItem","stringify","createRoom","roomData","newRoom","id","Date","now","toString","createdAt","toISOString","members","expenses","prev","joinRoom","roomId","user","map","room","isAlreadyMember","some","member","addExpense","expense","newExpense","updateExpense","expenseId","updates","deleteExpense","filter","getRoomById","find","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/src/contexts/RoomContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst RoomContext = createContext();\n\nexport const useRoom = () => {\n  const context = useContext(RoomContext);\n  if (!context) {\n    throw new Error('useRoom must be used within a RoomProvider');\n  }\n  return context;\n};\n\nexport const RoomProvider = ({ children }) => {\n  const [rooms, setRooms] = useState([]);\n  const [currentRoom, setCurrentRoom] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // Load saved rooms from localStorage\n    const savedRooms = localStorage.getItem('roomtab_rooms');\n    if (savedRooms) {\n      setRooms(JSON.parse(savedRooms));\n    }\n  }, []);\n\n  useEffect(() => {\n    // Save rooms to localStorage whenever rooms change\n    localStorage.setItem('roomtab_rooms', JSON.stringify(rooms));\n  }, [rooms]);\n\n  const createRoom = (roomData) => {\n    const newRoom = {\n      id: Date.now().toString(),\n      ...roomData,\n      createdAt: new Date().toISOString(),\n      members: roomData.members || [],\n      expenses: roomData.expenses || [],\n    };\n    setRooms(prev => [...prev, newRoom]);\n    return newRoom;\n  };\n\n  const joinRoom = (roomId, user) => {\n    setRooms(prev => prev.map(room => {\n      if (room.id === roomId) {\n        const isAlreadyMember = room.members.some(member => member.id === user.id);\n        if (!isAlreadyMember) {\n          return {\n            ...room,\n            members: [...room.members, user]\n          };\n        }\n      }\n      return room;\n    }));\n  };\n\n  const addExpense = (roomId, expense) => {\n    const newExpense = {\n      id: Date.now().toString(),\n      ...expense,\n      createdAt: new Date().toISOString(),\n    };\n\n    setRooms(prev => prev.map(room => {\n      if (room.id === roomId) {\n        return {\n          ...room,\n          expenses: [...room.expenses, newExpense]\n        };\n      }\n      return room;\n    }));\n\n    if (currentRoom?.id === roomId) {\n      setCurrentRoom(prev => ({\n        ...prev,\n        expenses: [...prev.expenses, newExpense]\n      }));\n    }\n  };\n\n  const updateExpense = (roomId, expenseId, updates) => {\n    setRooms(prev => prev.map(room => {\n      if (room.id === roomId) {\n        return {\n          ...room,\n          expenses: room.expenses.map(expense => \n            expense.id === expenseId ? { ...expense, ...updates } : expense\n          )\n        };\n      }\n      return room;\n    }));\n\n    if (currentRoom?.id === roomId) {\n      setCurrentRoom(prev => ({\n        ...prev,\n        expenses: prev.expenses.map(expense => \n          expense.id === expenseId ? { ...expense, ...updates } : expense\n        )\n      }));\n    }\n  };\n\n  const deleteExpense = (roomId, expenseId) => {\n    setRooms(prev => prev.map(room => {\n      if (room.id === roomId) {\n        return {\n          ...room,\n          expenses: room.expenses.filter(expense => expense.id !== expenseId)\n        };\n      }\n      return room;\n    }));\n\n    if (currentRoom?.id === roomId) {\n      setCurrentRoom(prev => ({\n        ...prev,\n        expenses: prev.expenses.filter(expense => expense.id !== expenseId)\n      }));\n    }\n  };\n\n  const getRoomById = (roomId) => {\n    return rooms.find(room => room.id === roomId);\n  };\n\n  const value = {\n    rooms,\n    currentRoom,\n    setCurrentRoom,\n    loading,\n    setLoading,\n    createRoom,\n    joinRoom,\n    addExpense,\n    updateExpense,\n    deleteExpense,\n    getRoomById,\n  };\n\n  return (\n    <RoomContext.Provider value={value}>\n      {children}\n    </RoomContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}